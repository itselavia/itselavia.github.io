<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-02-01T14:18:01-08:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Learning Path</title><subtitle>A technical blog documenting topics about cloud, security and DevOps</subtitle><entry><title type="html">Automated deployment of MongoDB cluster to AWS using Terraform</title><link href="http://localhost:4000/2019/12/01/automated-mongodb-deployment/" rel="alternate" type="text/html" title="Automated deployment of MongoDB cluster to AWS using Terraform" /><published>2019-12-01T04:00:00-08:00</published><updated>2019-12-01T04:00:00-08:00</updated><id>http://localhost:4000/2019/12/01/automated-mongodb-deployment</id><content type="html" xml:base="http://localhost:4000/2019/12/01/automated-mongodb-deployment/">&lt;p&gt;Deploying a cluster is hard. Deploying a database cluster is harder. Deploying a database cluster repeatedly to the cloud is an unimaginable headache. Nowadays, IaC tools allows teams to automatically provision the complex intertwined cloud infrastructure in a deterministic manner. There can be multiple reasons why you would want to invest efforts into writing code for automating the deployment of a database cluster:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Performance testing your applications' access patterns by pointing them to your database&lt;/li&gt; 
&lt;li&gt;Documenting the custom configurations made while setting up the database&lt;/li&gt;
&lt;li&gt;Safely and quickly replicating environments for staging, testing, DR, etc&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In this post, we'll look at deploying a MongoDB cluster to AWS with 1 primary (master) node and n secondary (data) nodes. We'll codify all our configurations with Terraform, shell scripts and Python scripts, to launch and bootstrap our cluster. This is the architecture diagram of the deployment:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#&quot;&gt;
    &lt;img src=&quot;/img/MongoDB-Replica-Set-Deployment-Architecture.png&quot; alt=&quot;Mongo Cluster Deployment Diagram&quot; /&gt;
&lt;/a&gt;
&lt;span class=&quot;caption text-muted&quot;&gt;AWS Architecture Diagram for the MongoDB Cluster Deployment&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Let's go over the resources that are going to be created:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A VPC to isolate and contain all the instances&lt;/li&gt; 
&lt;li&gt;3 Public subnets and 3 Private subnets spread across 3 Availability Zones&lt;/li&gt;
&lt;li&gt;A Bastion Host (or Jump Box) for accessing the instances in the private subnets from an external network&lt;/li&gt;
&lt;li&gt;A NAT instance to provide internet access to the instances in the private subnets. (Side tip: NAT Gateway costs stack up a lot quickly than you can anticipate. Go for a NAT instance if your workloads aren't critical)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All the source code is available at &lt;a href=&quot;https://github.com/itselavia/mongodb-terraform-deployment&quot;&gt;this GitHub repository.&lt;/a&gt; The code is structured as different Terraform modules such as VPC, JumpBox, MongoDB Cluster, etc. You can visit the repository for installation prerequisites and instructions on how to run the project. Here's a snippet of the main.tf file which utilizes all the Terraform modules:&lt;/p&gt;

&lt;?prettify?&gt;
&lt;pre class=&quot;prettyprint linenums&quot;&gt;
module &quot;vpc&quot; {
  source   = &quot;./vpc&quot;
  key_name = &quot;${module.key_pair.key_name}&quot;
  vpc_name = &quot;${var.vpc_name}&quot;
}

module &quot;key_pair&quot; {
  source     = &quot;./key_pair&quot;
  key_name   = &quot;mongo-key-pair&quot;
  public_key = &quot;${file(&quot;~/.ssh/id_rsa.pub&quot;)}&quot;
}

module &quot;jumpbox&quot; {
  source    = &quot;./jumpbox&quot;
  key_name  = &quot;${module.key_pair.key_name}&quot;
  vpc_id    = &quot;${module.vpc.vpc_id}&quot;
  subnet_id = &quot;${module.vpc.public_subnet_ids[1]}&quot;
}

module &quot;mongodb_cluster&quot; {
  source              = &quot;./mongodb_cluster&quot;
  key_name            = &quot;${module.key_pair.key_name}&quot;
  vpc_id              = &quot;${module.vpc.vpc_id}&quot;
  vpc_cidr_block      = &quot;${module.vpc.vpc_cidr_block}&quot;
  primary_node_type   = &quot;${var.primary_node_type}&quot;
  secondary_node_type = &quot;${var.secondary_node_type}&quot;
  private_subnet_ids  = &quot;${module.vpc.private_subnet_ids}&quot;
  jumpbox_public_ip   = &quot;${module.jumpbox.jumpbox_public_ip}&quot;
  replica_set_name    = &quot;${var.replica_set_name}&quot;
  num_secondary_nodes = &quot;${var.num_secondary_nodes}&quot;
  mongo_username      = &quot;${var.mongo_username}&quot;
  mongo_database      = &quot;${var.mongo_database}&quot;
  mongo_password      = &quot;${var.mongo_password}&quot;
}
&lt;/pre&gt;

&lt;p&gt;The MongoDB cluster module takes in a lot of configurable parameters which can be supplied by the terraform.tfvars file:&lt;/p&gt;

&lt;?prettify?&gt;
&lt;pre class=&quot;prettyprint linenums&quot;&gt;
vpc_name            = &quot;mongo_vpc&quot;
replica_set_name    = &quot;mongoRs&quot;
num_secondary_nodes = 3
mongo_username      = &quot;admin&quot;
mongo_password      = &quot;mongo4pass&quot;
mongo_database      = &quot;admin&quot;
primary_node_type   = &quot;t2.micro&quot;
secondary_node_type = &quot;t2.micro&quot;
&lt;/pre&gt;
&lt;h3 class=&quot;section-heading&quot;&gt;The MongoDB Cluster Module&lt;/h3&gt;
&lt;p&gt;We're going to deploy MongoDB v4.0 using the Ubuntu 18.04 AMI. &lt;a href=&quot;https://docs.mongodb.com/manual/tutorial/install-mongodb-on-ubuntu/&quot;&gt;This page from the official MongoDB documentation&lt;/a&gt; delineates steps to follow for installing MongoDB on Ubuntu. Just browsing through the insane number of steps involved or the confusing order of steps, you can imagine the dividend of scripting the commands rather than scampering through the documentation to figure out what worked the last time. Additionally, since this isn't a single node deployment, we need to deploy a replica set for MongoDB. &lt;a href=&quot;https://docs.mongodb.com/manual/replication/&quot;&gt;Here's excellent documentation&lt;/a&gt; which expands on the replication features of MongoDB. And &lt;a href=&quot;https://docs.mongodb.com/manual/tutorial/deploy-replica-set/&quot;&gt;here's the documentation&lt;/a&gt; specifying the steps needed to deploy a ReplicaSet&lt;/p&gt;

&lt;p&gt;The main.tf file for the MongoDB cluster module contains the code for creating the resources like EC2 instances, IAM policies, Security Groups, etc. Using Terraform's &lt;a href=&quot;https://www.terraform.io/docs/provisioners/file.html&quot;&gt;file provisioner&lt;/a&gt;, certain scripts and files (like the private key file needed to be shared by all the participating nodes) are uploaded to the instances while creating them. But wait, how can Terraform upload a file from your laptop to an instance launched in an AWS private subnet? Check out the nifty &quot;bastion_host&quot; parameter in the connection block: &lt;/p&gt;

&lt;?prettify?&gt;
&lt;pre class=&quot;prettyprint linenums&quot;&gt;
provisioner &quot;file&quot; {
    source      = &quot;${path.module}/keyFile&quot;
    destination = &quot;/home/ubuntu/keyFile&quot;

    connection {
      type         = &quot;ssh&quot;
      user         = &quot;ubuntu&quot;
      host         = &quot;${self.private_ip}&quot;
      agent        = false
      private_key  = &quot;${file(&quot;~/.ssh/id_rsa&quot;)}&quot;
      bastion_host = &quot;${var.jumpbox_public_ip}&quot;
      bastion_user = &quot;ec2-user&quot;
    }
  }
&lt;/pre&gt;

&lt;p&gt;Here's a snippet for creating the Secondary nodes. The &quot;count&quot; parameter (passed by the user) controls how many nodes to create. The instance is placed in any of the 3 private subnets in a round-robin manner.&lt;/p&gt;
&lt;?prettify?&gt;
&lt;pre class=&quot;prettyprint linenums&quot;&gt;
resource &quot;aws_instance&quot; &quot;mongo_secondary&quot; {
  count                  = &quot;${var.num_secondary_nodes}&quot;
  ami                    = &quot;${data.aws_ami.ubuntu_18_image.id}&quot;
  instance_type          = &quot;${var.secondary_node_type}&quot;
  key_name               = &quot;${var.key_name}&quot;
  subnet_id = &quot;${var.private_subnet_ids[count.index % length(var.private_subnet_ids)]}&quot;
  user_data              = &quot;${data.template_file.userdata.rendered}&quot;
  vpc_security_group_ids = [&quot;${aws_security_group.mongo_sg.id}&quot;]
  iam_instance_profile   = &quot;${aws_iam_instance_profile.mongo-instance-profile.name}&quot;
  root_block_device {
    volume_type = &quot;standard&quot;
  }

  tags = {
    Name = &quot;Mongo-Secondary_${count.index + 1}&quot;
    Type = &quot;secondary&quot;
  }
}
&lt;/pre&gt;

&lt;p&gt;The userdata shell script contains the bulk of the configuration. It scans the AWS environment for the cluster members and configures each instance with the private IPs of other members. This is accomplished by using the &lt;a href=&quot;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instancedata-data-retrieval.html&quot;&gt;EC2 Instance Metadata Service.&lt;/a&gt; Also, each instance has a Tag attached to it which helps to identify whether it's a Primary or Secondary node. Here are a few commands from the userdata shell script which creates MongoDB configuration and service files:&lt;/p&gt;

&lt;?prettify?&gt;
&lt;pre class=&quot;prettyprint linenums&quot;&gt;
sed -i 's/127.0.0.1/0.0.0.0/g' /etc/mongod.conf

cat &amp;gt;&amp;gt; /etc/mongod.conf &amp;lt;&amp;lt;EOL

security:
  keyFile: /opt/mongodb/keyFile

replication:
  replSetName: ${replica_set_name}

EOL

chown ubuntu:ubuntu /etc/mongod.conf

cat &amp;gt;&amp;gt; /etc/systemd/system/mongod.service &amp;lt;&amp;lt;EOL

[Unit]
Description=High-performance, schema-free document-oriented database
After=network.target

[Service]
User=mongodb
ExecStart=/usr/bin/mongod --quiet --config /etc/mongod.conf

[Install]
WantedBy=multi-user.target

EOL
&lt;/pre&gt;

&lt;p&gt;Go ahead and deploy the cluster in your AWS environment. Make sure you have a public-private keypair in the ~/.ssh directory. Use &lt;a href=&quot;https://www.ssh.com/ssh/keygen&quot;&gt;ssh-keygen&lt;/a&gt; to create the key files. Install &lt;a href=&quot;https://www.terraform.io/downloads.html&quot;&gt;Terraform&lt;/a&gt; and the &lt;a href=&quot;https://docs.aws.amazon.com/cli/latest/userguide/install-cliv2-linux-mac.html&quot;&gt;AWS CLI&lt;/a&gt;. Create ~/.aws/credentials file to store your AWS Secret Key and Access Key locally for Terraform to use. I hope everything works great on the first try. If not, please feel free to reach out and I'll be more than happy to help!&lt;/p&gt;</content><author><name>Akshay Elavia</name></author><summary type="html">Deploying a cluster is hard. Deploying a database cluster is harder. Deploying a database cluster repeatedly to the cloud is an unimaginable headache. Nowadays, IaC tools allows teams to automatically provision the complex intertwined cloud infrastructure in a deterministic manner. There can be multiple reasons why you would want to invest efforts into writing code for automating the deployment of a database cluster: Performance testing your applications' access patterns by pointing them to your database Documenting the custom configurations made while setting up the database Safely and quickly replicating environments for staging, testing, DR, etc</summary></entry><entry><title type="html">Create AWS AMIs using Ansible Remote Packer Provisioner</title><link href="http://localhost:4000/2018/11/10/ansible-provisioner-packer/" rel="alternate" type="text/html" title="Create AWS AMIs using Ansible Remote Packer Provisioner" /><published>2018-11-10T04:00:00-08:00</published><updated>2018-11-10T04:00:00-08:00</updated><id>http://localhost:4000/2018/11/10/ansible-provisioner-packer</id><content type="html" xml:base="http://localhost:4000/2018/11/10/ansible-provisioner-packer/">&lt;p&gt;Never in all their history have men been able truly to conceive of the world as one: a single sphere, a globe, having the qualities of a globe, a round earth in which all the directions eventually meet, in which there is no center because every point, or none, is center — an equal earth which all men occupy as equals. The airman's earth, if free men make it, will be truly round: a globe in practice, not in theory.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#&quot;&gt;
    &lt;img src=&quot;/img/ansible-provisioner-packer.jpg&quot; alt=&quot;Post Sample Image&quot; /&gt;
&lt;/a&gt;
&lt;span class=&quot;caption text-muted&quot;&gt;Diagram to represent the process followed and the AWS resources created&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Science cuts two ways, of course; its products can be used for both good and evil. But there's no turning back from science. The early warnings about technological dangers also come from science.&lt;/p&gt;

&lt;p&gt;What was most significant about the lunar voyage was not that man set foot on the Moon but that they set eye on the earth.&lt;/p&gt;

&lt;?prettify?&gt;
&lt;pre class=&quot;prettyprint linenums&quot;&gt;
resource aws_instance &quot;packer_ansible_demo&quot; {
    #Ubuntu 18 AMI in us-east-1 region
    ami = &quot;ami-0ac019f4fcb7cb7e6&quot;
    instance_type = &quot;t2.micro&quot;
    iam_instance_profile = &quot;${aws_iam_instance_profile.packer_instance_profile.id}&quot;
}

data &quot;template_file&quot; &quot;packer_iam_policy&quot; {
  template = &quot;${file(&quot;packer_iam_policy.json&quot;)}&quot;
}

data &quot;aws_iam_policy_document&quot; &quot;instance-assume-role-policy&quot; {
  statement {
    actions = [&quot;sts:AssumeRole&quot;]

    principals {
      type        = &quot;Service&quot;
      identifiers = [&quot;ec2.amazonaws.com&quot;]
    }
  }
}

resource &quot;aws_iam_role&quot; &quot;packer_role&quot; {
  name               = &quot;packer.role&quot;
  assume_role_policy = &quot;${data.aws_iam_policy_document.instance-assume-role-policy.json}&quot;
}

resource &quot;aws_iam_role_policy&quot; &quot;packer_role_policy&quot; {
  name   = &quot;packer.policy&quot;
  role   = &quot;${aws_iam_role.packer_role.name}&quot;
  policy = &quot;${data.template_file.packer_iam_policy.rendered}&quot;
}

resource &quot;aws_iam_instance_profile&quot; &quot;packer_instance_profile&quot; {
  name = &quot;packer.instance.profile&quot;
  role = &quot;${aws_iam_role.packer_role.name}&quot;
}

&lt;/pre&gt;

&lt;p&gt;A Chinese tale tells of some men sent to harm a young girl who, upon seeing her beauty, become her protectors rather than her violators. That's how I felt seeing the Earth for the first time. I could not help but love and cherish her.&lt;/p&gt;

&lt;p&gt;For those who have seen the Earth from space, and for the hundreds and perhaps thousands more who will, the experience most certainly changes your perspective. The things that we share in our world are far more valuable than those which divide us.&lt;/p&gt;

&lt;h2 class=&quot;section-heading&quot;&gt;The Final Frontier&lt;/h2&gt;

&lt;p&gt;There can be no thought of finishing for ‘aiming for the stars.’ Both figuratively and literally, it is a task to occupy the generations. And no matter how much progress one makes, there is always the thrill of just beginning.&lt;/p&gt;

&lt;p&gt;There can be no thought of finishing for ‘aiming for the stars.’ Both figuratively and literally, it is a task to occupy the generations. And no matter how much progress one makes, there is always the thrill of just beginning.&lt;/p&gt;

&lt;blockquote&gt;The dreams of yesterday are the hopes of today and the reality of tomorrow. Science has not yet mastered prophecy. We predict too much for the next year and yet far too little for the next ten.&lt;/blockquote&gt;

&lt;p&gt;Spaceflights cannot be stopped. This is not the work of any one man or even a group of men. It is a historical process which mankind is carrying out in accordance with the natural laws of human development.&lt;/p&gt;

&lt;h2 class=&quot;section-heading&quot;&gt;Reaching for the Stars&lt;/h2&gt;

&lt;p&gt;As we got further and further away, it [the Earth] diminished in size. Finally it shrank to the size of a marble, the most beautiful you can imagine. That beautiful, warm, living object looked so fragile, so delicate, that if you touched it with a finger it would crumble and fall apart. Seeing this has to change a man.&lt;/p&gt;

&lt;p&gt;Space, the final frontier. These are the voyages of the Starship Enterprise. Its five-year mission: to explore strange new worlds, to seek out new life and new civilizations, to boldly go where no man has gone before.&lt;/p&gt;

&lt;p&gt;As I stand out here in the wonders of the unknown at Hadley, I sort of realize there’s a fundamental truth to our nature, Man must explore, and this is exploration at its greatest.&lt;/p&gt;

&lt;p&gt;Placeholder text by &lt;a href=&quot;http://spaceipsum.com/&quot;&gt;Space Ipsum&lt;/a&gt;. Photographs by &lt;a href=&quot;https://www.flickr.com/photos/nasacommons/&quot;&gt;NASA on The Commons&lt;/a&gt;.&lt;/p&gt;</content><author><name>Akshay Elavia</name></author><summary type="html">Never in all their history have men been able truly to conceive of the world as one: a single sphere, a globe, having the qualities of a globe, a round earth in which all the directions eventually meet, in which there is no center because every point, or none, is center — an equal earth which all men occupy as equals. The airman's earth, if free men make it, will be truly round: a globe in practice, not in theory.</summary></entry><entry><title type="html">Create Encrypted AWS AMIs using Hashicorp Packer</title><link href="http://localhost:4000/2018/10/20/encrypted-ami-packer/" rel="alternate" type="text/html" title="Create Encrypted AWS AMIs using Hashicorp Packer" /><published>2018-10-20T05:00:00-07:00</published><updated>2018-10-20T05:00:00-07:00</updated><id>http://localhost:4000/2018/10/20/encrypted-ami-packer</id><content type="html" xml:base="http://localhost:4000/2018/10/20/encrypted-ami-packer/">&lt;p&gt;Never in all their history have men been able truly to conceive of the world as one: a single sphere, a globe, having the qualities of a globe, a round earth in which all the directions eventually meet, in which there is no center because every point, or none, is center — an equal earth which all men occupy as equals. The airman's earth, if free men make it, will be truly round: a globe in practice, not in theory.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#&quot;&gt;
    &lt;img src=&quot;/img/ansible-provisioner-packer.jpg&quot; alt=&quot;Post Sample Image&quot; /&gt;
&lt;/a&gt;
&lt;span class=&quot;caption text-muted&quot;&gt;Diagram to represent the process followed and the AWS resources created&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Science cuts two ways, of course; its products can be used for both good and evil. But there's no turning back from science. The early warnings about technological dangers also come from science.&lt;/p&gt;

&lt;p&gt;What was most significant about the lunar voyage was not that man set foot on the Moon but that they set eye on the earth.&lt;/p&gt;

&lt;?prettify?&gt;
&lt;pre class=&quot;prettyprint linenums&quot;&gt;
resource aws_instance &quot;packer_ansible_demo&quot; {
    #Ubuntu 18 AMI in us-east-1 region
    ami = &quot;ami-0ac019f4fcb7cb7e6&quot;
    instance_type = &quot;t2.micro&quot;
    iam_instance_profile = &quot;${aws_iam_instance_profile.packer_instance_profile.id}&quot;
}

data &quot;template_file&quot; &quot;packer_iam_policy&quot; {
  template = &quot;${file(&quot;packer_iam_policy.json&quot;)}&quot;
}

data &quot;aws_iam_policy_document&quot; &quot;instance-assume-role-policy&quot; {
  statement {
    actions = [&quot;sts:AssumeRole&quot;]

    principals {
      type        = &quot;Service&quot;
      identifiers = [&quot;ec2.amazonaws.com&quot;]
    }
  }
}

resource &quot;aws_iam_role&quot; &quot;packer_role&quot; {
  name               = &quot;packer.role&quot;
  assume_role_policy = &quot;${data.aws_iam_policy_document.instance-assume-role-policy.json}&quot;
}

resource &quot;aws_iam_role_policy&quot; &quot;packer_role_policy&quot; {
  name   = &quot;packer.policy&quot;
  role   = &quot;${aws_iam_role.packer_role.name}&quot;
  policy = &quot;${data.template_file.packer_iam_policy.rendered}&quot;
}

resource &quot;aws_iam_instance_profile&quot; &quot;packer_instance_profile&quot; {
  name = &quot;packer.instance.profile&quot;
  role = &quot;${aws_iam_role.packer_role.name}&quot;
}

&lt;/pre&gt;

&lt;p&gt;A Chinese tale tells of some men sent to harm a young girl who, upon seeing her beauty, become her protectors rather than her violators. That's how I felt seeing the Earth for the first time. I could not help but love and cherish her.&lt;/p&gt;

&lt;p&gt;For those who have seen the Earth from space, and for the hundreds and perhaps thousands more who will, the experience most certainly changes your perspective. The things that we share in our world are far more valuable than those which divide us.&lt;/p&gt;

&lt;h2 class=&quot;section-heading&quot;&gt;The Final Frontier&lt;/h2&gt;

&lt;p&gt;There can be no thought of finishing for ‘aiming for the stars.’ Both figuratively and literally, it is a task to occupy the generations. And no matter how much progress one makes, there is always the thrill of just beginning.&lt;/p&gt;

&lt;p&gt;There can be no thought of finishing for ‘aiming for the stars.’ Both figuratively and literally, it is a task to occupy the generations. And no matter how much progress one makes, there is always the thrill of just beginning.&lt;/p&gt;

&lt;blockquote&gt;The dreams of yesterday are the hopes of today and the reality of tomorrow. Science has not yet mastered prophecy. We predict too much for the next year and yet far too little for the next ten.&lt;/blockquote&gt;

&lt;p&gt;Spaceflights cannot be stopped. This is not the work of any one man or even a group of men. It is a historical process which mankind is carrying out in accordance with the natural laws of human development.&lt;/p&gt;

&lt;h2 class=&quot;section-heading&quot;&gt;Reaching for the Stars&lt;/h2&gt;

&lt;p&gt;As we got further and further away, it [the Earth] diminished in size. Finally it shrank to the size of a marble, the most beautiful you can imagine. That beautiful, warm, living object looked so fragile, so delicate, that if you touched it with a finger it would crumble and fall apart. Seeing this has to change a man.&lt;/p&gt;

&lt;p&gt;Space, the final frontier. These are the voyages of the Starship Enterprise. Its five-year mission: to explore strange new worlds, to seek out new life and new civilizations, to boldly go where no man has gone before.&lt;/p&gt;

&lt;p&gt;As I stand out here in the wonders of the unknown at Hadley, I sort of realize there’s a fundamental truth to our nature, Man must explore, and this is exploration at its greatest.&lt;/p&gt;

&lt;p&gt;Placeholder text by &lt;a href=&quot;http://spaceipsum.com/&quot;&gt;Space Ipsum&lt;/a&gt;. Photographs by &lt;a href=&quot;https://www.flickr.com/photos/nasacommons/&quot;&gt;NASA on The Commons&lt;/a&gt;.&lt;/p&gt;</content><author><name>Akshay Elavia</name></author><summary type="html">Never in all their history have men been able truly to conceive of the world as one: a single sphere, a globe, having the qualities of a globe, a round earth in which all the directions eventually meet, in which there is no center because every point, or none, is center — an equal earth which all men occupy as equals. The airman's earth, if free men make it, will be truly round: a globe in practice, not in theory.</summary></entry><entry><title type="html">Enable Backend Instance Authentication for AWS ELB</title><link href="http://localhost:4000/2018/10/08/backend-authentication-elb/" rel="alternate" type="text/html" title="Enable Backend Instance Authentication for AWS ELB" /><published>2018-10-08T05:00:00-07:00</published><updated>2018-10-08T05:00:00-07:00</updated><id>http://localhost:4000/2018/10/08/backend-authentication-elb</id><content type="html" xml:base="http://localhost:4000/2018/10/08/backend-authentication-elb/">&lt;p&gt;While solutioning and implementing cloud architectures, applications that need to meet compliance standards often require Encryption-in-transit as one of the fundamental security guardrail.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#&quot;&gt;
    &lt;img src=&quot;/img/ansible-provisioner-packer.jpg&quot; alt=&quot;Post Sample Image&quot; /&gt;
&lt;/a&gt;
&lt;span class=&quot;caption text-muted&quot;&gt;Diagram to represent the process followed and the AWS resources created&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Science cuts two ways, of course; its products can be used for both good and evil. But there's no turning back from science. The early warnings about technological dangers also come from science.&lt;/p&gt;

&lt;p&gt;What was most significant about the lunar voyage was not that man set foot on the Moon but that they set eye on the earth.&lt;/p&gt;

&lt;p&gt;A Chinese tale tells of some men sent to harm a young girl who, upon seeing her beauty, become her protectors rather than her violators. That's how I felt seeing the Earth for the first time. I could not help but love and cherish her.&lt;/p&gt;

&lt;p&gt;For those who have seen the Earth from space, and for the hundreds and perhaps thousands more who will, the experience most certainly changes your perspective. The things that we share in our world are far more valuable than those which divide us.&lt;/p&gt;

&lt;h2 class=&quot;section-heading&quot;&gt;The Final Frontier&lt;/h2&gt;

&lt;p&gt;There can be no thought of finishing for ‘aiming for the stars.’ Both figuratively and literally, it is a task to occupy the generations. And no matter how much progress one makes, there is always the thrill of just beginning.&lt;/p&gt;

&lt;p&gt;There can be no thought of finishing for ‘aiming for the stars.’ Both figuratively and literally, it is a task to occupy the generations. And no matter how much progress one makes, there is always the thrill of just beginning.&lt;/p&gt;

&lt;blockquote&gt;The dreams of yesterday are the hopes of today and the reality of tomorrow. Science has not yet mastered prophecy. We predict too much for the next year and yet far too little for the next ten.&lt;/blockquote&gt;

&lt;p&gt;Spaceflights cannot be stopped. This is not the work of any one man or even a group of men. It is a historical process which mankind is carrying out in accordance with the natural laws of human development.&lt;/p&gt;

&lt;h2 class=&quot;section-heading&quot;&gt;Reaching for the Stars&lt;/h2&gt;

&lt;p&gt;As we got further and further away, it [the Earth] diminished in size. Finally it shrank to the size of a marble, the most beautiful you can imagine. That beautiful, warm, living object looked so fragile, so delicate, that if you touched it with a finger it would crumble and fall apart. Seeing this has to change a man.&lt;/p&gt;

&lt;p&gt;Space, the final frontier. These are the voyages of the Starship Enterprise. Its five-year mission: to explore strange new worlds, to seek out new life and new civilizations, to boldly go where no man has gone before.&lt;/p&gt;

&lt;p&gt;As I stand out here in the wonders of the unknown at Hadley, I sort of realize there’s a fundamental truth to our nature, Man must explore, and this is exploration at its greatest.&lt;/p&gt;

&lt;p&gt;Placeholder text by &lt;a href=&quot;http://spaceipsum.com/&quot;&gt;Space Ipsum&lt;/a&gt;. Photographs by &lt;a href=&quot;https://www.flickr.com/photos/nasacommons/&quot;&gt;NASA on The Commons&lt;/a&gt;.&lt;/p&gt;</content><author><name>Akshay Elavia</name></author><summary type="html">While solutioning and implementing cloud architectures, applications that need to meet compliance standards often require Encryption-in-transit as one of the fundamental security guardrail.</summary></entry></feed>